$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 7 # opcode [6:0] $end
  $var wire 7 $ func7 [6:0] $end
  $var wire 3 % func3 [2:0] $end
  $var wire 1 & reg_wen $end
  $var wire 1 ' alu_pc_sel $end
  $var wire 1 ( alu_imm_sel $end
  $var wire 1 ) mem_wen $end
  $var wire 1 * illegal_op $end
  $var wire 4 + alu_ctrl [3:0] $end
  $var wire 3 , branch_cond [2:0] $end
  $var wire 3 - byte_mask [2:0] $end
  $var wire 2 . wb_sel [1:0] $end
  $scope module Controller $end
   $var wire 7 # opcode [6:0] $end
   $var wire 7 $ func7 [6:0] $end
   $var wire 3 % func3 [2:0] $end
   $var wire 1 & reg_wen $end
   $var wire 1 ' alu_pc_sel $end
   $var wire 1 ( alu_imm_sel $end
   $var wire 1 ) mem_wen $end
   $var wire 1 * illegal_op $end
   $var wire 4 + alu_ctrl [3:0] $end
   $var wire 3 , branch_cond [2:0] $end
   $var wire 3 - byte_mask [2:0] $end
   $var wire 2 . wb_sel [1:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0110011 #
b0000000 $
b000 %
1&
0'
0(
0)
0*
b0000 +
b010 ,
b010 -
b00 .
#1
b0100000 $
b0001 +
#2
b0000000 $
b101 %
b1010 +
#3
b0010011 #
b000 %
1(
b0000 +
#4
b0100000 $
b101 %
b1011 +
#5
b1100011 #
b0000000 $
b000 %
0&
1'
b0000 +
b000 ,
#6
b101 %
b101 ,
#7
b0000011 #
b000 %
1&
0'
b010 ,
b000 -
b01 .
#8
b001 %
b001 -
#9
b010 %
b010 -
#10
b0100011 #
b000 %
0&
1)
b000 -
b00 .
#11
b001 %
b001 -
#12
b010 %
b010 -
#13
b1101111 #
b000 %
1&
1'
0)
b011 ,
b10 .
#14
b1100111 #
0'
b0011 +
#15
b0110111 #
b1111 +
b010 ,
b00 .
#16
b0010111 #
0&
b0000 +
b011 ,
#17
b0000011 #
b100 %
1&
b010 ,
b100 -
b01 .
#18
b101 %
b101 -
#19
b0000000 #
b000 %
0&
0(
1*
b010 -
b00 .
