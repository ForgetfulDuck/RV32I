$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 7 # opcode [6:0] $end
  $var wire 7 $ func7 [6:0] $end
  $var wire 3 % func3 [2:0] $end
  $var wire 4 & alu_ctrl [3:0] $end
  $var wire 3 ' branch_cond [2:0] $end
  $var wire 3 ( byte_mask [2:0] $end
  $var wire 2 ) wb_sel [1:0] $end
  $var wire 1 * reg_wen $end
  $var wire 1 + alu_pc_sel $end
  $var wire 1 , alu_imm_sel $end
  $var wire 1 - mem_wen $end
  $var wire 1 . illegal_op $end
  $scope module Controller $end
   $var wire 7 # opcode [6:0] $end
   $var wire 7 $ func7 [6:0] $end
   $var wire 3 % func3 [2:0] $end
   $var wire 4 & alu_ctrl [3:0] $end
   $var wire 3 ' branch_cond [2:0] $end
   $var wire 3 ( byte_mask [2:0] $end
   $var wire 2 ) wb_sel [1:0] $end
   $var wire 1 * reg_wen $end
   $var wire 1 + alu_pc_sel $end
   $var wire 1 , alu_imm_sel $end
   $var wire 1 - mem_wen $end
   $var wire 1 . illegal_op $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0010011 #
b0000000 $
b000 %
b0000 &
b000 '
b010 (
b00 )
1*
0+
1,
0-
0.
#1
b001 %
b0101 &
#2
b010 %
b1000 &
#3
b011 %
b1001 &
#4
b100 %
b0010 &
#5
b101 %
b0110 &
#6
b0100000 $
b0111 &
#7
b0000000 $
b110 %
b0011 &
#8
b111 %
b0100 &
#9
b0110011 #
b000 %
b0000 &
0,
#10
b0100000 $
b0001 &
#11
b0000000 $
b001 %
b0101 &
#12
b010 %
b1000 &
#13
b011 %
b1001 &
#14
b100 %
b0010 &
#15
b101 %
b0110 &
#16
b0100000 $
b0111 &
#17
b0000000 $
b110 %
b0011 &
#18
b111 %
b0100 &
#19
b1100011 #
b000 %
b0000 &
b001 '
0*
1+
1,
#20
b001 %
b010 '
#21
b010 %
b000 '
#22
b011 %
#23
b110 %
b101 '
#24
b111 %
b110 '
#25
b0000011 #
b000 %
b000 '
b000 (
b01 )
1*
0+
#26
b010 %
b010 (
#27
b101 %
b101 (
#28
b100 %
b100 (
#29
b110 %
b010 (
#30
b0100011 #
b000 %
b000 (
b00 )
0*
1-
#31
b010 %
b010 (
#32
b101 %
b101 (
#33
b1101111 #
b000 %
b111 '
b010 (
b10 )
1*
1+
0-
#34
b1100111 #
b1010 &
0+
#35
b0110111 #
b1111 &
b000 '
b00 )
#36
b0010111 #
b0000 &
b111 '
0*
#37
b1111111 #
b000 '
0,
1.
